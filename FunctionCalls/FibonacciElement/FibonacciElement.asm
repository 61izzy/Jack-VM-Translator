@256
D=A
@SP
M=D
// debug: call Sys.init 0
@$ret.1
D=A
@SP
M=M+1
A=M-1
M=D
@1
D=M
@SP
M=M+1
A=M-1
M=D
@2
D=M
@SP
M=M+1
A=M-1
M=D
@3
D=M
@SP
M=M+1
A=M-1
M=D
@4
D=M
@SP
M=M+1
A=M-1
M=D
D=A+1
@5
D=D-A
@ARG
M=D
@Sys.init
0;JMP
($ret.1)
// debug: function Main.fibonacci 0
(Main.fibonacci)
@SP
D=M
@LCL
AM=D
// debug: push argument 0
D=0
@ARG
A=D+M
D=M
@SP
M=M+1
A=M-1
M=D
// debug: push constant 2
@2
D=A
@SP
M=M+1
A=M-1
M=D
// debug: arithmetic lt
@SP
AM=M-1
D=M
A=A-1
D=M-D
M=-1
@COMPLABEL1
D;JLT
@SP
A=M-1
M=0
(COMPLABEL1)
// debug: if-goto N_LT_2
@SP
AM=M-1
D=M
@Main.fibonacci$N_LT_2
D;JNE
// debug: goto N_GE_2
@Main.fibonacci$N_GE_2
0;JMP
// debug: label N_LT_2
(Main.fibonacci$N_LT_2)
// debug: push argument 0
D=0
@ARG
A=D+M
D=M
@SP
M=M+1
A=M-1
M=D
// debug: return
@5
D=A
@LCL
A=M-D
D=M
@R13
M=D
@SP
A=M-1
D=M
@R14
M=D
@ARG
D=M
@SP
M=D+1
@R14
D=M
@SP
A=M-1
M=D
@1
D=A
@LCL
A=M-D
D=M
@4
M=D
@2
D=A
@LCL
A=M-D
D=M
@3
M=D
@3
D=A
@LCL
A=M-D
D=M
@2
M=D
@4
D=A
@LCL
A=M-D
D=M
@1
M=D
@R13
A=M
0;JMP
// debug: label N_GE_2
(Main.fibonacci$N_GE_2)
// debug: push argument 0
D=0
@ARG
A=D+M
D=M
@SP
M=M+1
A=M-1
M=D
// debug: push constant 2
@2
D=A
@SP
M=M+1
A=M-1
M=D
// debug: arithmetic sub
@SP
AM=M-1
D=M
A=A-1
M=M-D
// debug: call Main.fibonacci 1
@Main.fibonacci$ret.1
D=A
@SP
M=M+1
A=M-1
M=D
@1
D=M
@SP
M=M+1
A=M-1
M=D
@2
D=M
@SP
M=M+1
A=M-1
M=D
@3
D=M
@SP
M=M+1
A=M-1
M=D
@4
D=M
@SP
M=M+1
A=M-1
M=D
D=A+1
@6
D=D-A
@ARG
M=D
@Main.fibonacci
0;JMP
(Main.fibonacci$ret.1)
// debug: push argument 0
D=0
@ARG
A=D+M
D=M
@SP
M=M+1
A=M-1
M=D
// debug: push constant 1
D=1
@SP
M=M+1
A=M-1
M=D
// debug: arithmetic sub
@SP
AM=M-1
D=M
A=A-1
M=M-D
// debug: call Main.fibonacci 1
@Main.fibonacci$ret.2
D=A
@SP
M=M+1
A=M-1
M=D
@1
D=M
@SP
M=M+1
A=M-1
M=D
@2
D=M
@SP
M=M+1
A=M-1
M=D
@3
D=M
@SP
M=M+1
A=M-1
M=D
@4
D=M
@SP
M=M+1
A=M-1
M=D
D=A+1
@6
D=D-A
@ARG
M=D
@Main.fibonacci
0;JMP
(Main.fibonacci$ret.2)
// debug: arithmetic add
@SP
AM=M-1
D=M
A=A-1
M=D+M
// debug: return
@5
D=A
@LCL
A=M-D
D=M
@R13
M=D
@SP
A=M-1
D=M
@R14
M=D
@ARG
D=M
@SP
M=D+1
@R14
D=M
@SP
A=M-1
M=D
@1
D=A
@LCL
A=M-D
D=M
@4
M=D
@2
D=A
@LCL
A=M-D
D=M
@3
M=D
@3
D=A
@LCL
A=M-D
D=M
@2
M=D
@4
D=A
@LCL
A=M-D
D=M
@1
M=D
@R13
A=M
0;JMP
// debug: function Sys.init 0
(Sys.init)
@SP
D=M
@LCL
AM=D
// debug: push constant 4
@4
D=A
@SP
M=M+1
A=M-1
M=D
// debug: call Main.fibonacci 1
@Sys.init$ret.1
D=A
@SP
M=M+1
A=M-1
M=D
@1
D=M
@SP
M=M+1
A=M-1
M=D
@2
D=M
@SP
M=M+1
A=M-1
M=D
@3
D=M
@SP
M=M+1
A=M-1
M=D
@4
D=M
@SP
M=M+1
A=M-1
M=D
D=A+1
@6
D=D-A
@ARG
M=D
@Main.fibonacci
0;JMP
(Sys.init$ret.1)
// debug: label END
(Sys.init$END)
// debug: goto END
@Sys.init$END
0;JMP
